{"version":3,"sources":["contexts/SocketContext.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","useState","io","socket","Provider","value","themeColor","setThemeColor","joinCreateRoomModal","setJoinCreateRoomModal","joinCreateRoomTitle","setJoinCreateRoomTitle","userNameModal","setUserNameModal","inRoom","setInRoom","alertMessage","setAlertMessage","sideBarOpen","setSideBarOpen","userName","setUserName","roomName","setRoomName","roomPassword","setRoomPassword","newMessage","setNewMessage","messages","setMessages","users","setUsers","useContext","lastMessage","useRef","classes","makeStyles","message","position","maxWidth","padding","margin","marginLeft","textAlign","backgroundColor","color","othersMessage","marginRight","msgUser","top","left","fontSize","icon","textWhite","backgroundChange","useStyle","useEffect","username","localStorage","getItem","on","alert","setTimeout","m","msg","user","u","filter","leaveRoom","emit","sendNewMessage","changeTheme","current","scrollIntoView","length","badge","Theme","className","IconButton","onClick","DrawerButton","SideBar","SwipeableDrawer","open","onOpen","onClose","Grid","item","xs","md","container","justify","style","height","Typography","variant","component","marginTop","List","map","index","ListItem","key","button","ListItemAvatar","Avatar","alt","charAt","src","ListItemText","primary","Button","Room","Alert","severity","toUpperCase","i","Paper","ref","TextInput","TextField","autoFocus","type","onChange","e","target","flex","InputProps","onKeyPress","HomePage","alignItems","Divider","marginBottom","spacing","Dialog","DialogTitle","DialogContent","placeholder","display","DialogActions","DialogContentText","Container","fullWidth","disabled","setItem","lightTheme","width","darkTheme","App","theme","createMuiTheme","palette","main","secondary","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c45f35cc.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport io from 'socket.io-client';\n\nconst isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport const SocketContext = createContext();\n\nexport default function SocketProvider({ children }) {\n\n\tconst [socket] = useState(io(isDev ? 'http://127.0.0.1:8000/' : \"/\"));\n\n\treturn (\n\t\t\t<SocketContext.Provider value={socket}>\n\t\t\t\t{ children }\n\t\t\t</SocketContext.Provider>\n\t\t)\n}","import React, {\n\tuseState, \n\tuseEffect, \n\tuseContext, \n\tuseRef, \n\tFragment,\n} from 'react';\nimport {\n\tmakeStyles,\n\tGrid,\n\tContainer,\n\tIconButton,\n\tPaper,\n\tTextField,\n\tButton,\n\tTypography,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tDivider,\n\tList,\n\tListItem,\n\tListItemAvatar,\n\tListItemText,\n\tAvatar,\n\tSwipeableDrawer,\n} from \"@material-ui/core\";\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { SocketContext } from \"../contexts/SocketContext\";\n\nexport default function({ themeColor, setThemeColor }) {\n\n\tconst [joinCreateRoomModal, setJoinCreateRoomModal] = useState(false);\n\tconst [joinCreateRoomTitle, setJoinCreateRoomTitle] = useState(\"\");\n\tconst [userNameModal, setUserNameModal] = useState(false);\n\tconst [inRoom, setInRoom] = useState(false);\n\tconst [alertMessage, setAlertMessage] = useState({});\n\tconst [sideBarOpen, setSideBarOpen] = useState(false);\n\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [roomName, setRoomName] = useState(\"\");\n\tconst [roomPassword, setRoomPassword] = useState(\"\");\n\tconst [newMessage, setNewMessage] = useState(\"\");\n\tconst [messages, setMessages] = useState([]);\n\tconst [users, setUsers] = useState([]);\n\n\tconst socket = useContext(SocketContext);\n\n\tconst lastMessage = useRef();\n\n\tconst useStyle = makeStyles({\n\t\tmessage: {\n\t\t\tposition: \"relative\",\n\t\t\tmaxWidth: \"50%\",\n\t\t\tpadding: \"7px 10px\",\n\t\t\tmargin: \"5px 0\",\n\t\t\tmarginLeft: \"auto\",\n\t\t\ttextAlign: \"center\",\n\t\t\tbackgroundColor: themeColor === \"light\" ? \"#007bff\" : \"#444\",\n\t\t\tcolor: \"whitesmoke\",\n\t\t},\n\t\tothersMessage: {\n\t\t\tposition: \"relative\",\n\t\t\tmaxWidth: \"50%\",\n\t\t\tpadding: \"7px 10px\",\n\t\t\tmargin: \"5px 0\",\n\t\t\tmarginRight: \"auto\",\n\t\t\ttextAlign: \"center\",\n\t\t\tbackgroundColor: themeColor === \"light\" ? \"#007bff\" : \"#444\",\n\t\t\tcolor: \"whitesmoke\",\n\t\t},\n\t\tmsgUser: {\n\t\t\tposition: \"absolute\",\n\t\t\ttop: -5,\n\t\t\tleft: 5,\n\t\t\tfontSize: 12,\n\t\t\tbackgroundColor: themeColor === \"light\" ? \"#007bff\" : \"#444\",\n\t\t},\n\t\ticon: {\n\t\t\tcolor: themeColor === \"light\" ? \"black\" : \"white\",\n\t\t},\n\t\ttextWhite: {\n\t\t\tcolor: themeColor === \"light\" ? \"black\" : \"whitesmoke\",\n\t\t},\n\t\tbackgroundChange: {\n\t\t\tbackgroundColor: themeColor === \"light\" ? \"whitesmoke\" : \"#333\",\n\t\t\tcolor: themeColor === \"light\" ? \"black\" : \"whitesmoke\",\n\t\t}\n\t});\n\n\tconst classes = useStyle();\n\n\tuseEffect(() => {\n\t\tconst username = localStorage.getItem(\"username\");\n\t\tif (!!username){\n\t\t\tsetUserName(username);\n\t\t\tsetUserNameModal(false);\n\t\t} \n\t\telse \n\t\t\tsetUserNameModal(true);\n\n\t\tsocket.on(\"alert\", alert => {\n\t\t\tsetAlertMessage(alert);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAlertMessage({});\n\t\t\t}, 3000);\n\t\t});\n\n\t\tsocket.on(\"joined\", users => {\n\t\t\tsetUsers(users);\n\t\t\tsetInRoom(true);\n\t\t});\n\n\t\tsocket.on(\"left\", () => {\n\t\t\tsetInRoom(false);\n\t\t\tsetRoomName(\"\");\n\t\t\tsetRoomPassword(\"\");\n\t\t\tsetUsers([]);\n\t\t\tsetJoinCreateRoomModal(false);\n\t\t\tsetMessages([]);\n\t\t})\n\n\t\tsocket.on(\"receiveMessage\", ({ userName, newMessage }) => {\n\t\t\tsetMessages(m => [ ...m, { msg: newMessage, user: userName } ]);\n\t\t});\n\n\t\tsocket.on(\"userJoined\", userName => setUsers(u => [ ...u, userName ]));\n\n\t\tsocket.on(\"userLeft\", userName => \n\t\t\tsetUsers(u => \n\t\t\t\tu.filter(user => user !== userName))\n\t\t\t);\n\t}, [socket])\n\n\tconst setUserNameToLocalStorage = () => {\n\t\tlocalStorage.setItem(\"username\", userName);\n\t\tsetUserNameModal(false);\n\t}\n\n\tconst createRoom = () => {\n\t\tsocket.emit(\"createRoom\", { userName, roomName, roomPassword });\n\t}\n\n\tconst joinRoom = () => {\n\t\tsocket.emit(\"joinRoom\", { userName, roomName, roomPassword });\n\t}\n\n\tconst leaveRoom = () => {\n\t\tsocket.emit(\"leaveRoom\", { userName, roomName });\n\t}\n\n\tconst sendNewMessage = () => {\n\t\tif (!!newMessage){\n\t\t\tsocket.emit(\"sendNewMessage\", { userName, roomName, newMessage });\n\t\t\tsetMessages([ ...messages, { msg: newMessage, user: \"You\" } ]);\n\t\t\tsetNewMessage(\"\");\n\t\t}\n\t}\n\n\tconst changeTheme = () => {\n\t\tif (themeColor === \"light\")\n\t\t\tsetThemeColor(\"dark\");\n\t\telse\n\t\t\tsetThemeColor(\"light\");\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (!!lastMessage.current){\n\t\t\tlastMessage.current.scrollIntoView();\n\t\t}\n\t}, [messages])\n\n\tuseEffect(() => {\n\t\tif (users.length === 1){\n\t\t\tsetAlertMessage({\n\t\t\t\tmsg: \"room will be deleted at 0 members\", \n\t\t\t\tbadge: \"info\" \n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAlertMessage({})\n\t\t\t}, 3000);\n\t\t}\n\t}, [users])\n\n\tconst Theme = () => (\n\t\t<div className=\"theme-button-container\">\n\t\t\t<IconButton onClick={changeTheme}>\n\t\t\t\t{\n\t\t\t\t\tthemeColor === \"light\" ?\n\t\t\t\t\t<Brightness3Icon className={classes.icon} />\n\t\t\t\t\t\t:\n\t\t\t\t\t<WbSunnyIcon className={classes.icon} />\n\t\t\t\t}\n\t\t\t</IconButton>\n\t\t</div>\n\t)\n\n\tconst DrawerButton = () => (\n\t\t<div className=\"drawer-button-container\">\n\t\t\t<IconButton onClick={() => setSideBarOpen(true)}>\n\t\t\t\t<MenuIcon className={classes.icon} />\n\t\t\t</IconButton>\n\t\t</div>\n\t)\n\n\tconst SideBar = () => (\n\t\t<SwipeableDrawer \n\t\t\topen={sideBarOpen} \n\t\t\tonOpen={() => setSideBarOpen(true)} \n\t\t\tonClose={() => setSideBarOpen(false)}\n\t\t>\n\t\t\t<Grid \n\t\t\t\titem \n\t\t\t\txs={0} \n\t\t\t\tmd={3} \n\t\t\t\tcontainer \n\t\t\t\tjustify=\"center\"\n\t\t\t\tstyle={{ textAlign: \"center\", height:\"100%\" }}\n\t\t\t\tclassName={classes.backgroundChange} \n\t\t\t>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Typography variant=\"h4\" component=\"h1\">\n\t\t\t\t\t\tChat App\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{marginTop:50}}>\n\t\t\t\t\t<Typography variant=\"p\" component=\"p\">\n\t\t\t\t\t\tUsers: \n\t\t\t\t\t\t<List className=\"users-container\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tusers.map((user,index) => (\n\t\t\t\t\t\t\t\t<ListItem key={index} button>\n\t\t\t\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\talt={user.charAt(0)}\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t\t\t\t<ListItemText primary={user} />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetSideBarOpen(false);\n\t\t\t\t\t\t\tleaveRoom();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"contained\" \n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLeave Room\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</SwipeableDrawer>\n\t)\n\n\tconst Room = () => (\n\t\t<Grid \n\t\t\tcontainer \n\t\t\tjustify=\"center\"\n\t\t\tclassName=\"total-width\"\n\t\t>\n\t\t\t<div className=\"vis\">\n\t\t\t\t<Grid item xs={0} md={6} container justify=\"center\">\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h1\">\n\t\t\t\t\t\t\tChat App\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} style={{marginTop:50}}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t!!alertMessage.msg ?\n\t\t\t\t\t\t\t<Alert severity={alertMessage.badge}>\n\t\t\t\t\t\t\t\t{ alertMessage.msg }\n\t\t\t\t\t\t\t</Alert> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Typography variant=\"p\" component=\"p\">\n\t\t\t\t\t\t\tUsers: \n\t\t\t\t\t\t\t<List className=\"users-container\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tusers.map((user,index) => (\n\t\t\t\t\t\t\t\t\t<ListItem key={index} button>\n\t\t\t\t\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\talt={user.charAt(0)}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t<ListItemText primary={user} />\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tonClick={leaveRoom}\n\t\t\t\t\t\t\tvariant=\"contained\" \n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLeave Room\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t<Grid item xs={12} md={4} style={{ position:\"relative\" }}>\n\t\t\t\t<Typography variant=\"h5\" component=\"p\">\n\t\t\t\t\t{ roomName.toUpperCase() }\n\t\t\t\t</Typography>\n\t\t\t\t<div className=\"siv\">\n\t\t\t\t\t{\n\t\t\t\t\t\t!!alertMessage.msg ?\n\t\t\t\t\t\t<Alert severity={setAlertMessage.badge}>\n\t\t\t\t\t\t\t{ alertMessage.msg }\n\t\t\t\t\t\t</Alert> : null\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"full-height\">\n\t\t\t\t\t{\n\t\t\t\t\t\tmessages.map((msg,i) => {\n\t\t\t\t\t\t\tif (i === messages.length - 1)\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Paper \n\t\t\t\t\t\t\t\t\t\tref={lastMessage}\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tmsg.user === \"You\" ? \n\t\t\t\t\t\t\t\t\t\t\tclasses.message : \n\t\t\t\t\t\t\t\t\t\t\tclasses.othersMessage\n\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ti - 1 >= 0 &&\n\t\t\t\t\t\t\t\t\t\tmsg.user !== messages[i - 1].user ?\n\t\t\t\t\t\t\t\t\t\t<small className={classes.msgUser}>\n\t\t\t\t\t\t\t\t\t\t\t{msg.user}\n\t\t\t\t\t\t\t\t\t\t</small> : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{msg.msg}\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Paper \n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\tmsg.user === \"You\" ? \n\t\t\t\t\t\t\t\t\t\tclasses.message : \n\t\t\t\t\t\t\t\t\t\tclasses.othersMessage\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ti - 1 >= 0 &&\n\t\t\t\t\t\t\t\t\tmsg.user !== messages[i - 1].user ?\n\t\t\t\t\t\t\t\t\t<small className={classes.msgUser}>\n\t\t\t\t\t\t\t\t\t\t{msg.user}\n\t\t\t\t\t\t\t\t\t</small> : null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{msg.msg}\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t<TextInput />\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n\n\tconst TextInput = () => (\n\t\t<Fragment>\n\t\t\t<TextField\n\t\t\t\tautoFocus\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tvalue={newMessage}\n\t\t\t\tonChange={e => setNewMessage(e.target.value)}\n\t\t\t\tstyle={{ flex:1 }}\n\t\t\t\tInputProps={{ className: classes.textWhite }}\n\t\t\t\tonKeyPress={e => {\n\t\t\t\t\tif (e.key === \"Enter\")\n\t\t\t\t\t\tsendNewMessage();\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tonClick={sendNewMessage}\n\t\t\t\tcolor=\"primary\"\n\t\t\t>\n\t\t\t\tSend\n\t\t\t</Button>\n\t\t</Fragment>\n\t)\n\n\tconst HomePage = () => (\n\t\t<Grid container justify=\"center\" alignItems=\"center\" className=\"total-width\">\n\t\t\t<Grid item xs={12} md={4} container>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Typography variant=\"h4\" component=\"h1\" style={{margin:20}}>\n\t\t\t\t\t\tChat App\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider style={{ marginTop:15,marginBottom:7 }} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Typography variant=\"p\" component=\"p\">\n\t\t\t\t\t\ta normal chatting app\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} style={{ margin:20 }}>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetJoinCreateRoomTitle(\"Create Room\");\n\t\t\t\t\t\t\t\t\tsetJoinCreateRoomModal(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate Room\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetJoinCreateRoomTitle(\"Join Room\");\n\t\t\t\t\t\t\t\t\tsetJoinCreateRoomModal(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tJoin Room\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\n\t\t\t<Theme />\n\n\t\t\t{\n\n\t\t\t\tinRoom ?\n\t\t\t\t<Fragment>\n\t\t\t\t\t<DrawerButton />\n\t\t\t\t\t<SideBar />\n\t\t\t\t\t<Room />\n\t\t\t\t</Fragment>\n\t\t\t\t:\n\t\t\t\t<Fragment>\n\t\t\t\t\t<HomePage />\n\t\t\t\t\t\n\t\t\t\t\t{/*JoinCreateRoomModal*/}\n\t\t\t\t\t<Dialog \n\t\t\t\t\t\tonClose={() => setJoinCreateRoomModal(false)} \n\t\t\t\t\t\topen={joinCreateRoomModal}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DialogTitle className={classes.backgroundChange}>\n\t\t\t\t\t\t\t{ joinCreateRoomTitle }\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t<DialogContent className={classes.backgroundChange}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t!!alertMessage.msg ?\n\t\t\t\t\t\t\t\t<Alert severity={alertMessage.badge}>\n\t\t\t\t\t\t\t\t\t{ alertMessage.msg }\n\t\t\t\t\t\t\t\t</Alert> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={roomName}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Room Name\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"block\" }}\n\t\t\t\t\t\t\t\tonChange={e => setRoomName(e.target.value)}\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t        className: classes.textWhite\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\tvalue={roomPassword}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Room Password\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"block\" }}\n\t\t\t\t\t\t\t\tonChange={e => setRoomPassword(e.target.value)}\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t        className: classes.textWhite\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions className={classes.backgroundChange}>\n\t\t\t\t\t\t\t<Button onClick={() => {\n\t\t\t\t\t\t\t\tsetRoomName(\"\");\n\t\t\t\t\t\t\t\tsetRoomPassword(\"\");\n\t\t\t\t\t\t\t\tsetJoinCreateRoomModal(false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\tjoinCreateRoomTitle === \"Join Room\" ? \n\t\t\t\t\t\t\t\t\tjoinRoom : createRoom\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ joinCreateRoomTitle }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t{/*UserNameModal*/}\n\t\t\t\t\t<Dialog \n\t\t\t\t\t\topen={userNameModal}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DialogTitle>\n\t\t\t\t\t\t\tUser Name\n\t\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\tTo subscribe to this website, \n\t\t\t\t\t\t\t\tplease enter your user name here.\n\t\t\t\t\t\t\t\tWe will ask this only one time.\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\t\t\tonChange={e => setUserName(e.target.value)}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={!userName && userName.length < 3}\n\t\t\t\t\t\t\t\tonClick={setUserNameToLocalStorage}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</Dialog>\n\t\t\t\t</Fragment>\n\n\t\t\t}\n\n\t\t</Fragment>\n\t)\n}","import React, { useState, useEffect } from 'react';\n\nimport {\n\tcreateMuiTheme,\n\tThemeProvider,\n} from \"@material-ui/core\";\n\nimport ChatApp from \"./components\";\nimport Provider from \"./contexts/SocketContext\";\n\nconst lightTheme = {\n\twidth: \"100vw\",\n\theight: \"100vh\",\n\tbackgroundColor: \"whitesmoke\",\n\tcolor: \"black\",\n}\n\nconst darkTheme = {\n\twidth: \"100vw\",\n\theight: \"100vh\",\n\tbackgroundColor: \"#333\",\n\tcolor: \"whitesmoke\",\n}\n\nfunction App() {\n\n\tconst [themeColor, setThemeColor] = useState(\"light\");\n\n\tuseEffect(() => {\n\t\tconst theme = localStorage.getItem(\"theme\");\n\t\tif (!!theme)\n\t\t\tsetThemeColor(theme);\n\t\telse\n\t\t\tlocalStorage.setItem(\"theme\",\"light\");\n\t}, [])\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"theme\", themeColor);\n\t}, [themeColor])\n\n\tconst theme = createMuiTheme({\n\t\tpalette: {\n\t        primary: {\n\t            main: themeColor === \"light\" ? \"#007bff\" : \"#444\",\n\t        },\n\t        secondary: {\n\t        \tmain: themeColor === \"light\" ? \"#222\" : \"#fff\"\n\t        }\n\t    }\n\t})\n\n  return (\n  \t<ThemeProvider theme={theme}>\n\t    <Provider>\n\t    \t<div style={themeColor === \"light\" ? lightTheme : darkTheme}>\n\t    \t\t<ChatApp themeColor={themeColor} setThemeColor={setThemeColor} />\n\t    \t</div>\n\t    </Provider>\n    </ThemeProvider>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}